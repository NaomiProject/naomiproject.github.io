(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{337:function(e,t,s){"use strict";s.r(t);var a=s(1),n=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),s("p",[e._v("It's been a few months since I have built DeepSpeech (today is August 13th, 2018), so these instructions probably need to be updated.\nThey are for building DeepSpeech on Debian or a derivative, but should be fairly easy to translate to other systems by just changing the package manager and package names.")]),e._v(" "),e._m(1),s("p",[e._v("Apparently you need bazel in order to build bazel, so download a copy and unzip it")]),e._v(" "),e._m(2),s("p",[e._v("The script is in 555 mode when you unzip it, so you have to make it writable")]),e._v(" "),e._m(3),s("p",[e._v("If you are building for the Raspberry Pi, do these things (note that DeepSpeech did not run very well on the Raspberry Pi the last time I checked. The language model was too large to fit in memory, and without it DeepSpeech just returns raw phonemes):")]),e._v(" "),e._m(4),e._v(" "),s("p",[e._v("It also sounds like maybe the cc_configure.bzl script has some trouble figuring out the platform, so you give it a little help by editing the _get_cpu_value function and just tell it to always return “arm”")]),e._v(" "),s("p",[e._v("Now build it")]),e._v(" "),e._m(5),s("p",[e._v("I recommend using PocketSphinx for passive listening and DeepSpeech for active listening. To use it as the active listener with Naomi, you will need to add a section like this to your profile.yml file:")]),e._v(" "),e._m(6),s("DocPreviousVersions"),e._v(" "),s("EditPageLink")],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"deepspeech-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deepspeech-setup","aria-hidden":"true"}},[this._v("#")]),this._v(" DeepSpeech setup")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-console extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[~]$ sudo apt-get install pkg-config zip g++ zlib1g-dev unzip\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-console extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[~]$ wget https://github.com/bazelbuild/bazel/releases/download/0.4.5/bazel-0.4.5-dist.zip\n[~]$ unzip -d bazel-0.4.5-dist bazel-0.4.5-dist.zip\n[~]$ cd bazel-0.4.5-dist\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v("[")]),this._v("~/bazel-0.4.5-dist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v("]")]),this._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[this._v("chmod")]),this._v(" a+w scripts/bootstrap/compile.sh\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("vi scripts/bootstrap/compile.sh")]),this._v(" "),t("li",[this._v("Goto line 117 and add -J-Xmx500M")]),this._v(" "),t("li",[this._v("Save and quit")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-console extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[~/bazel-0.4.5-dist]$ ./compile.sh\nBuild successful! Binary is here: ~/bazel-0.4.5-dist/output/bazel\n[~/bazel-0.4.5-dist]$ sudo cp -iv output/bazel /usr/local/bin/\n[~/bazel-0.4.5-dist]$ cd ..\n[~]$ git clone https://github.com/mozilla/tensorflow.git\n[~]$ git clone https://github.com/mozilla/DeepSpeech.git\n[~]$ cd tensorflow/\n[~/tensorflow]$ ln -s ../DeepSpeech/native_client/ ./\n[~/tensorflow]$ ./configure\n[~/tensorflow]$ bazel build -c opt --copt=-O3 //native_client:libctc_decoder_with_kenlm.so\n[~/tensorflow]$ bazel build --config=monolithic -c opt --copt=-O3 --copt=-fvisibility=hidden --incompatible_load_argument_is_label=false //native_client:libdeepspeech.so //native_client:deepspeech_utils //native_client:libctc_decoder_with_kenlm.so //native_client:generate_trie\n[~/tensorflow]$ cd native_client\n[~/tensorflow/native_client]$ make deepspeech\n[~/tensorflow/native_client]$ PREFIX=/usr/local sudo make install\n[~/tensorflow/native_client]$ make bindings\n[~/tensorflow/native_client]$ pip install dist/deepspeech-*.whl\n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("active_stt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("engine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" deepspeech"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("stt\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("deepspeech")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/home/user/models/output_graph.pb'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("alphabet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/home/user/models/alphabet.txt'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("language_model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/home/user/models/lm.binary'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("trie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/home/user/models/trie'")]),e._v("\n")])])])}],!1,null,null,null);t.default=n.exports}}]);