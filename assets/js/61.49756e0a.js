(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{355:function(e,t,i){"use strict";i.r(t);var n=i(1),r=Object(n.a)({},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),i("p",[e._v("We are always thrilled to receive pull requests, and do our best to\nprocess them as fast as possible. Not sure if that typo is worth a pull\nrequest? Do it! We will appreciate it.")]),e._v(" "),i("p",[e._v("If your pull request is not accepted instantly, don't be\ndiscouraged! If there's a problem with the implementation, hopefully you\nreceived feedback on what to improve.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),i("p",[e._v("We recommend discussing your plans "),i("a",{attrs:{href:"https://community.projectnaomi.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("in the discussion forum"),i("OutboundLink")],1),e._v("\nbefore starting to code - especially for more ambitious contributions.\nThis gives other contributors a chance to point you in the right\ndirection, give feedback on your concept, and maybe point out if someone\nelse is working on the same thing.")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),i("p",[e._v('Please take a moment to check that an issue doesn\'t already exist\ndocumenting your bug report or improvement proposal. If it does, it\nnever hurts to add a quick "+1" or "I have this problem too". This will\nhelp prioritize the most common problems and requests.')]),e._v(" "),e._m(7),e._v(" "),i("p",[e._v("Fork the repo and make changes on your fork in a feature branch:")]),e._v(" "),e._m(8),e._v(" "),i("p",[e._v("Submit unit tests for your changes.  Naomi has a great test framework built in; use\nit! Take a look at existing tests for inspiration. Run the full test suite on\nyour branch before submitting a pull request.")]),e._v(" "),i("p",[e._v("Update the documentation when creating or modifying features. Test\nyour documentation changes for clarity, concision, and correctness, as\nwell as a clean documentation build.")]),e._v(" "),i("p",[e._v("Write clean code. Universally formatted code promotes ease of writing, reading,\nand maintenance.")]),e._v(" "),i("p",[e._v("Pull requests descriptions should be as clear as possible and include a\nreference to all the issues that they address.")]),e._v(" "),i("p",[e._v("Pull requests must not contain commits from other users or branches.")]),e._v(" "),i("p",[e._v("Commit messages must start with a capitalized and short summary (max. 50\nchars) written in the imperative, followed by an optional, more detailed\nexplanatory text which is separated from the summary by an empty line.")]),e._v(" "),i("p",[e._v("Code review comments may be added to your pull request. Discuss, then make the\nsuggested modifications and push additional commits to your feature branch. Be\nsure to post a comment after pushing. The new commits will show up in the pull\nrequest automatically, but the reviewers will not be notified unless you\ncomment.")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),i("p",[e._v("Naomi maintainers use the "),i("a",{attrs:{href:"https://help.github.com/articles/about-pull-request-reviews/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github review feature"),i("OutboundLink")],1),e._v(" to indicate acceptance.")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),i("p",[e._v("The repos are setup to ask for a CLA sign-off when creating a pull request for the first time. This certifies that you wrote code or otherwise have the right to\npass code on as an open-source patch.\nThe rules are pretty simple: if you can certify the below (from\n"),i("a",{attrs:{href:"http://developercertificate.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("developercertificate.org"),i("OutboundLink")],1),e._v("):")]),e._v(" "),e._m(14),i("p",[e._v("This is done by clicking the link on the CLAassitants comment on your pull request,\nsigning in to the site using your github account, and then filling out the form.")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),i("p",[e._v("If your pull request contains code from others as well, each party has to accept the CLA.")]),e._v(" "),e._m(17),e._v(" "),i("ul",[i("li",[e._v("Step 1: learn the program inside & out")]),e._v(" "),i("li",[e._v("Step 2: make yourself useful by contributing code, bugfixes, support, etc.")]),e._v(" "),i("li",[e._v("Step 3: volunteer "),i("a",{attrs:{href:"https://community.projectnaomi.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("in the community"),i("OutboundLink")],1)])]),e._v(" "),i("p",[e._v("Don't forget: being a maintainer is a time investment. Make sure you will have time to make yourself available.\nYou don't have to be a maintainer to make a difference on the project!")]),e._v(" "),e._m(18),e._v(" "),i("p",[e._v("We want to keep the Naomi community awesome, growing and collaborative. We\nneed your help to keep it that way. To help with this we've come up with some\ngeneral guidelines for the community as a whole:")]),e._v(" "),e._m(19)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"contribution-guidelines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contribution-guidelines","aria-hidden":"true"}},[this._v("#")]),this._v(" Contribution Guidelines")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"pull-requests-are-always-welcome"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull-requests-are-always-welcome","aria-hidden":"true"}},[this._v("#")]),this._v(" Pull Requests are Always Welcome")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("We're trying very hard to keep Naomi lean and focused. We don't want it\nto do everything for everybody. This means that we might decide against\nincorporating a new feature. However, there might be a way to implement\nthat feature "),t("em",[this._v("on top of")]),this._v(" Naomi.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"discuss-your-design-on-the-mailing-list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#discuss-your-design-on-the-mailing-list","aria-hidden":"true"}},[this._v("#")]),this._v(" Discuss your Design on the Mailing List")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"create-issues"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-issues","aria-hidden":"true"}},[this._v("#")]),this._v(" Create Issues")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Any significant improvement should be documented as a GitHub\nissue in the "),t("a",{attrs:{href:"#the-repositories"}},[this._v("appropriate repository")]),this._v(" before anybody\nstarts working on it.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"but-check-for-existing-issues-first"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#but-check-for-existing-issues-first","aria-hidden":"true"}},[this._v("#")]),this._v(" ...but Check for Existing Issues First")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"conventions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conventions","aria-hidden":"true"}},[this._v("#")]),this._v(" Conventions")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("If it's a bugfix branch, name it XXX-something where XXX is the number of the\nissue")]),this._v(" "),t("li",[this._v("If it's a feature branch, create an enhancement issue to announce your\nintentions, and name it XXX-something where XXX is the number of the issue.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Before the pull request is merged, make sure that you squash your commits into\nlogical units of work using "),t("code",[this._v("git rebase -i")]),this._v(" and "),t("code",[this._v("git push -f")]),this._v(". After every\ncommit the test suite should be passing. Include documentation changes in the\nsame commit so that a revert would remove all traces of the feature or fix.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Commits that fix or close an issue should include a reference like "),t("code",[this._v("Closes #XXX")]),this._v("\nor "),t("code",[this._v("Fixes #XXX")]),this._v(", which will automatically close the issue when merged.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"merge-approval"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge-approval","aria-hidden":"true"}},[this._v("#")]),this._v(" Merge Approval")])},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("p",[e._v("A change requires approval from an absolute majority of the maintainers of each\ncomponent affected. For example, if a change affects "),i("code",[e._v("plugins/")]),e._v(" and "),i("code",[e._v("features/")]),e._v(", it\nneeds an absolute majority from the maintainers of "),i("code",[e._v("plugins/")]),e._v(" AND, separately, an\nabsolute majority of the maintainers of "),i("code",[e._v("features/")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"sign-your-work"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sign-your-work","aria-hidden":"true"}},[this._v("#")]),this._v(" Sign your Work")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You "),t("strong",[this._v("MUST")]),this._v(" your real name (sorry, no pseudonyms or anonymous contributions.) as well as an\ne-mail address under which you can be reached (sorry, no github noreply e-mail\naddresses (such as "),t("a",{attrs:{href:"mailto:username@users.noreply.github.com"}},[this._v("username@users.noreply.github.com")]),this._v(") or other non-reachable\naddresses are allowed).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("Note: If this is not followed your contribution will be rejected.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"how-can-i-become-a-maintainer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-can-i-become-a-maintainer","aria-hidden":"true"}},[this._v("#")]),this._v(" How can I Become a Maintainer")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"community-guidelines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#community-guidelines","aria-hidden":"true"}},[this._v("#")]),this._v(" Community Guidelines")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("Be nice: Be courteous, respectful and polite to fellow community members: no\nregional, racial, gender, or other abuse will be tolerated. We like nice people\nway better than mean ones!")])]),this._v(" "),t("li",[t("p",[this._v("Encourage diversity and participation: Make everyone in our community\nfeel welcome, regardless of their background and the extent of their\ncontributions, and do everything possible to encourage participation in\nour community.")])]),this._v(" "),t("li",[t("p",[this._v("Keep it legal: Basically, don't get us in trouble. Share only content that\nyou own, do not share private or sensitive information, and don't break the\nlaw.")])]),this._v(" "),t("li",[t("p",[this._v("Stay on topic: Make sure that you are posting to the correct channel\nand avoid off-topic discussions. Remember when you update an issue or\nrespond to an email you are potentially sending to a large number of\npeople.  Please consider this before you update.  Also remember that\nnobody likes spam.")])])])}],!1,null,null,null);t.default=r.exports}}]);